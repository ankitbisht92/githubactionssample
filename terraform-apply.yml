name: "Run Terraform apply"

on:
  pull_request:
    paths-ignore: ".gitignore"
  workflow_dispatch:

jobs:
  apply_apim_terraform:
    name: "Apply APIM Terraform Changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/apim
    env:
      ARM_CLIENT_ID: ${{ secrets.NON_PROD_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.NON_PROD_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: 93b71b78-b75b-4806-8282-97b9e70ae16c
      ARM_TENANT_ID: ${{ secrets.NON_PROD_ARM_TENANT_ID }}
      TF_INPUT: false
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
          terraform_wrapper: false

      - name: "Terraform Init"
        run: |
          terraform init -lock-timeout=15m -backend-config="./backends/dev.backend"
      - name: "Terraform Validate"
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: apim-plan
        run: |
          terraform plan \
            -lock-timeout=15m \
            -var-file="./var-files/dev.tfvars" \
            -out="dev-apim-plan.tfplan"

      - name: "Copy TF plan to reports dir"
        if: always()
        run: |
          mkdir -p ../../terraform_plans/dev
          cp dev-apim-plan.tfplan ../../terraform_plans/dev
      - name: "Upload Terraform plan"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: reports
          retention-days: 5
          path: |
            **/terraform_plans
      - name: "Terraform Apply"
        run: |
          terraform apply \
            -lock-timeout=15m \
            -auto-approve \
            dev-apim-plan.tfplan
      - name: "Set Terraform Outputs"
        id: set-terraform-outputs
        run: |
          terraform output -json > apim-outputs.json
          echo ::set-output name=resource-group-name::$( jq -r .resource_group_name.value apim-outputs.json )
          echo ::set-output name=key-vault-id::$( jq -r .key_vault_id.value apim-outputs.json )
          echo ::set-output name=key-vault-uri::$( jq -r .key_vault_uri.value apim-outputs.json )
          echo ::set-output name=app-service-plan-id::$( jq -r .app_service_plan_id.value apim-outputs.json )
          echo ::set-output name=apim-public-ip-address::$( jq -r .apim_public_ip_address.value apim-outputs.json )
          echo ::set-output name=app-services-subnet-id::$( jq -r .app_services_subnet_id.value apim-outputs.json )
          echo ::set-output name=apim-name::$( jq -r .apim_name.value apim-outputs.json )
          echo ::set-output name=apim-logger-id::$( jq -r .apim_logger_id.value apim-outputs.json )
          echo ::set-output name=version-set-id::$( jq -r .version_set_id.value apim-outputs.json )
          echo ::set-output name=apim-url::$( jq -r .apim_url.value apim-outputs.json )
    outputs:
      resource_group_name: ${{ steps.set-terraform-outputs.outputs.resource-group-name }}
      key_vault_id: ${{ steps.set-terraform-outputs.outputs.key-vault-id }}
      key_vault_uri: ${{ steps.set-terraform-outputs.outputs.key-vault-uri }}
      app_service_plan_id: ${{ steps.set-terraform-outputs.outputs.app-service-plan-id }}
      apim_public_ip_address: ${{ steps.set-terraform-outputs.outputs.apim-public-ip-address }}
      app_services_subnet_id: ${{ steps.set-terraform-outputs.outputs.app-services-subnet-id }}
      apim_name: ${{ steps.set-terraform-outputs.outputs.apim-name }}
      apim_logger_id: ${{ steps.set-terraform-outputs.outputs.apim-logger-id }}
      version_set_id: ${{ steps.set-terraform-outputs.outputs.version-set-id }}
      apim_url: ${{ steps.set-terraform-outputs.outputs.apim-url }}

  apply_backend_terraform:
    name: "Apply Backend Terraform Changes"
    needs:
      - apply_apim_terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/backend
    env:
      ARM_CLIENT_ID: ${{ secrets.NON_PROD_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.NON_PROD_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: 93b71b78-b75b-4806-8282-97b9e70ae16c
      ARM_TENANT_ID: ${{ secrets.NON_PROD_ARM_TENANT_ID }}
      TF_INPUT: false
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
          terraform_wrapper: false

      - name: "Terraform Init"
        run: |
          terraform init -lock-timeout=15m -backend-config="./backends/dev.backend"
      - name: "Terraform Validate"
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: backend-plan
        run: |
          terraform plan \
            -lock-timeout=15m \
            -var-file="./var-files/dev.tfvars" \
            -out="dev-backend-plan.tfplan"
        env:
          TF_VAR_resource_group_name: ${{ needs.apply_apim_terraform.outputs.resource_group_name }}
          TF_VAR_key_vault_id: ${{ needs.apply_apim_terraform.outputs.key_vault_id }}
          TF_VAR_key_vault_uri: ${{ needs.apply_apim_terraform.outputs.key_vault_uri }}
          TF_VAR_app_service_plan_id: ${{ needs.apply_apim_terraform.outputs.app_service_plan_id }}
          TF_VAR_apim_public_ip_address: ${{ needs.apply_apim_terraform.outputs.apim_public_ip_address }}
          TF_VAR_app_services_subnet_id: ${{ needs.apply_apim_terraform.outputs.app_services_subnet_id }}
          TF_VAR_apim_name: ${{ needs.apply_apim_terraform.outputs.apim_name }}
          TF_VAR_apim_logger_id: ${{ needs.apply_apim_terraform.outputs.apim_logger_id }}
          TF_VAR_version_set_id: ${{ needs.apply_apim_terraform.outputs.version_set_id }}
          TF_VAR_apim_url: ${{ needs.apply_apim_terraform.outputs.apim_url }}

      - name: "Copy TF plan to reports dir"
        if: always()
        run: |
          mkdir -p ../../terraform_plans/backend
          cp dev-backend-plan.tfplan ../../terraform_plans/backend
      - name: "Upload Terraform plan"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: reports
          retention-days: 5
          path: |
            **/terraform_plans
      - name: "Terraform Apply"
        run: |
          terraform apply \
            -lock-timeout=15m \
            -auto-approve \
            dev-backend-plan.tfplan
      - name: "Set Terraform Outputs"
        id: set-terraform-outputs
        run: |
          terraform output -json > backend-outputs.json
          echo ::set-output name=identity-web-app-name::$( jq -r .identity_web_app_name.value backend-outputs.json )
          echo ::set-output name=myaccounts-web-app-name::$( jq -r .myaccounts_web_app_name.value backend-outputs.json )
          echo ::set-output name=resource-group-name::$( jq -r .resource_group_name.value backend-outputs.json )
          echo ::set-output name=api-base-url::$( jq -r .api_base_url.value backend-outputs.json )
          echo ::set-output name=ois-web-app-name::$( jq -r .ois_web_app_name.value backend-outputs.json )
    outputs:
      identity_web_app_name: ${{ steps.set-terraform-outputs.outputs.identity-web-app-name }}
      myaccounts_web_app_name: ${{ steps.set-terraform-outputs.outputs.myaccounts-web-app-name }}
      resource_group_name: ${{ steps.set-terraform-outputs.outputs.resource-group-name }}
      api_base_url: ${{ steps.set-terraform-outputs.outputs.api-base-url }}
      ois_web_app_name: ${{ steps.set-terraform-outputs.outputs.ois-web-app-name }}
